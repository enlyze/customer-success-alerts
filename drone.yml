python_image: &python_image
  image: python:3.11-slim

docker_image: &docker_image
  image: docker:latest
  volumes:
    - name: dockersock
      path: /var/run

depend_on_clone: &depend_on_clone
    depends_on:
    - clone

pip_cache: &pip_cache
  volumes:
    - name: pip_cache
      path: /root/.cache/pip

run_on_prs_only_condition: &run_on_prs_only_condition
  when:
    event:
     - pull_request

production_condition: &production_condition
  when:
    branch:
      - master
    event:
      - push

deployment_image_config: &deployment_image_config
  pull: always
  image: docker.enlyze.com/enlyze/drone-sops-gke

tox_parallel_environment: &tox_parallel_environment
  environment:
    TOX_PARALLEL_NO_SPINNER: 1

deployment_environment: &deployment_environment
  environment:
    GOOGLE_APPLICATION_CREDENTIALS_JSON:
      from_secret: gke_token

common_deployment_settings: &common_deployment_settings
  zone: europe-west3-a
  verbose: true
  wait_deployments:
    - customer-success-alerts
  wait_seconds: 180

webhook_common_settings: &webhook_common_settings
  urls:
    from_secret: mattermost_platform_team_webhook_url
    content_type: application/json

webhook_plugin_image: &webhook_plugin_image
  image: plugins/webhook

kind: pipeline
name: CI Customer Service Alerts

trigger:
  branch:
    - master

steps:
- name: Sparkd alert rules
  pull: always
  image: docker.enlyze.com/enlyze/deploy-alert-rules
  environment:
    DEPLOY_SSH_KEY:
      from_secret: deploy_alert_rules_ssh_key
    RELOAD_PASSWORD:
      from_secret: deploy_alert_rules_prometheus_password
  commands:
    - >
      deploy-alert-rules
      --ssh-key="$${DEPLOY_SSH_KEY}"
      --prometheus-reload-password="$${RELOAD_PASSWORD}"
      customer-success-alerts
      alerts.yml